services:
  db:
    image: postgres:16-alpine
    container_name: starapi-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: starblog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - starapi-network

  starapi:
    image: starapi
    container_name: starapi
    restart: unless-stopped
    build:
      context: .
      dockerfile: StarApi/Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=starblog;Username=postgres;Password=postgres
      - ApiKey=${API_KEY:-your-api-key-here-change-in-production}
      - DigitalOceanSpaces__Endpoint=${SPACES_ENDPOINT:-https://nyc3.digitaloceanspaces.com}
      - DigitalOceanSpaces__AccessKey=${SPACES_ACCESS_KEY:-your-access-key}
      - DigitalOceanSpaces__SecretKey=${SPACES_SECRET_KEY:-your-secret-key}
      - DigitalOceanSpaces__Bucket=${SPACES_BUCKET:-your-bucket-name}
      - DigitalOceanSpaces__CdnBaseUrl=${SPACES_CDN_BASE_URL:-}
      - DigitalOceanSpaces__UseHttp=${SPACES_USE_HTTP:-false}
    networks:
      - starapi-network

volumes:
  postgres_data:

networks:
  starapi-network:
    driver: bridge

